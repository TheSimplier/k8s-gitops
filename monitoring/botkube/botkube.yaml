---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: botkube
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: botkube
      version: v0.18.0
      sourceRef:
        kind: HelmRepository
        name: botkube-charts
        namespace: flux-system
      interval: 5m
  values:
    settings:
      clusterName: k8s
      configWatcher: true
    existingCommunicationsSecretName: botkube-secret
    serviceMonitor:
      enabled: true
    sources:
      crds:
        displayName: CRDS
        kubernetes:
          namespaces:
            include:
              - all
          events:
            - create
            - delete
            - error
          resources:
            - name: helm.toolkit.fluxcd.io/v2beta1/helmreleases
            - name: source.toolkit.fluxcd.io/v1beta2/helmcharts
            - name: kustomize.toolkit.fluxcd.io/v1beta2/kustomizations
            - name: notification.toolkit.fluxcd.io/v1beta1/alerts
            - name: monitoring.coreos.com/v1/podmonitors
            - name: monitoring.coreos.com/v1/servicemonitors

      k8s-recommendation-events:
        displayName: "Kubernetes Recommendations"
        kubernetes:
          recommendations:
            pod:
              # If true, notifies about Pod containers that use `latest` tag for images.
              noLatestImageTag: true
              # If true, notifies about Pod resources created without labels.
              labelsSet: true
            # Recommendations for Ingress Kubernetes resource.
            ingress:
              # If true, notifies about Ingress resources with invalid backend service reference.
              backendServiceValid: true
              # If true, notifies about Ingress resources with invalid TLS secret reference.
              tlsSecretValid: true

      k8s-all-events:
        displayName: "Kubernetes Info"
        kubernetes:
          namespaces: &k8s-events-namespaces
            include:
              - ".*"
            exclude:
              - rook-ceph
              - kube-system
          event:
            # Lists all event types to be watched.
            types:
              - create
              - delete
              - error
            # Optional regex to filter events by event reason.
            reason: ""
            # Optional regex to filter events by message. If a given event has multiple messages, it is considered a match if any of the messages match the regex.
            message: ""

          # Filters Kubernetes resources to watch by annotations.
          annotations: {}
          # Filters Kubernetes resources to watch by labels.
          labels: {}

          # Describes the Kubernetes resources to watch.
          # Resources are identified by its type in `{group}/{version}/{kind (plural)}` format. Examples: `apps/v1/deployments`, `v1/pods`.
          # Each resource can override the namespaces and event configuration by using dedicated `event` and `namespaces` field.
          # Also, each resource can specify its own `annotations`, `labels` and `name` regex.
          resources:
            - type: v1/pods
            #  namespaces:             # Overrides 'source'.kubernetes.namespaces
            #    include:
            #      - ".*"
            #    exclude: []
            #  annotations: {}         # Overrides 'source'.kubernetes.annotations
            #  labels: {}              # Overrides 'source'.kubernetes.labels
            #  name: "" # Optional resource name regex.
            #  event:
            #    reason: ""            # Overrides 'source'.kubernetes.event.reason
            #    message: ""           # Overrides 'source'.kubernetes.event.message
            #    types:                # Overrides 'source'.kubernetes.event.types
            #      - create

            - type: v1/services
            - type: networking.k8s.io/v1/ingresses
            - type: v1/nodes
            - type: v1/namespaces
            - type: v1/persistentvolumes
            - type: v1/persistentvolumeclaims
            - type: v1/configmaps
            - type: rbac.authorization.k8s.io/v1/roles
            - type: rbac.authorization.k8s.io/v1/rolebindings
            - type: rbac.authorization.k8s.io/v1/clusterrolebindings
            - type: rbac.authorization.k8s.io/v1/clusterroles
            - type: apps/v1/daemonsets
              event: # Overrides 'source'.kubernetes.event
                types:
                  - create
                  - update
                  - delete
                  - error
              updateSetting:
                includeDiff: true
                fields:
                  - spec.template.spec.containers[*].image
                  - status.numberReady
            - type: batch/v1/jobs
              event: # Overrides 'source'.kubernetes.event
                types:
                  - create
                  - update
                  - delete
                  - error
              updateSetting:
                includeDiff: true
                fields:
                  - spec.template.spec.containers[*].image
                  - status.conditions[*].type
            - type: apps/v1/deployments
              event: # Overrides 'source'.kubernetes.event
                types:
                  - create
                  - update
                  - delete
                  - error
              updateSetting:
                includeDiff: true
                fields:
                  - spec.template.spec.containers[*].image
                  - status.availableReplicas
            - type: apps/v1/statefulsets
              event: # Overrides 'source'.kubernetes.event
                types:
                  - create
                  - update
                  - delete
                  - error
              updateSetting:
                includeDiff: true
                fields:
                  - spec.template.spec.containers[*].image
                  - status.readyReplicas

      k8s-err-events:
        displayName: "Kubernetes Errors"
        kubernetes:
          namespaces: *k8s-events-namespaces
          event:
            types:
              - error
          resources:
            - type: v1/pods
            - type: v1/services
            - type: networking.k8s.io/v1/ingresses
            - type: v1/nodes
            - type: v1/namespaces
            - type: v1/persistentvolumes
            - type: v1/persistentvolumeclaims
            - type: v1/configmaps
            - type: rbac.authorization.k8s.io/v1/roles
            - type: rbac.authorization.k8s.io/v1/rolebindings
            - type: rbac.authorization.k8s.io/v1/clusterrolebindings
            - type: rbac.authorization.k8s.io/v1/clusterroles
            - type: apps/v1/deployments
            - type: apps/v1/statefulsets
            - type: apps/v1/daemonsets
            - type: batch/v1/jobs

      k8s-err-with-logs-events:
        displayName: "Kubernetes Errors for resources with logs"
        kubernetes:
          namespaces: *k8s-events-namespaces
          event:
            types:
              - error
          resources:
            - type: v1/pods
            - type: apps/v1/deployments
            - type: apps/v1/statefulsets
            - type: apps/v1/daemonsets
            - type: batch/v1/jobs
            # `apps/v1/replicasets` excluded on purpose - to not show logs twice for a given higher-level resource (e.g. Deployment)

      k8s-create-events:
        displayName: "Kubernetes Resource Created Events"
        kubernetes:
          # Describes namespaces for every Kubernetes resources you want to watch or exclude.
          # These namespaces are applied to every resource specified in the resources list.
          # However, every specified resource can override this by using its own namespaces object.
          namespaces: *k8s-events-namespaces
          event:
            types:
              - create
          resources:
            - type: v1/pods
            - type: v1/services
            - type: networking.k8s.io/v1/ingresses
            - type: v1/nodes
            - type: v1/namespaces
            - type: v1/configmaps
            - type: apps/v1/deployments
            - type: apps/v1/statefulsets
            - type: apps/v1/daemonsets
            - type: batch/v1/jobs
